snippet help-analysis
	${0}# Snippets for various analyses
	# NOTE: Required packages must be installed!!!

	# Principal component analysis, PCA
	a-pca

	# Principal cordinate analysis, PCoA (classical multidimensional scaling, cMDS)
	a-pcoa

	# Non-metric multidimensional scaling (nMDS)
	a-nmds

snippet a-pca
	`r if (!"factoextra" %in% .packages()) "library(factoextra)\n\n"`
	${1:pca_model} <- prcomp(${2:data}, scale = TRUE)

	get_eigenvalue(${1:pca_model}) %>% round(1)
	fviz_screeplot(${1:pca_model}, addlabels = TRUE, ncp = 10)

	fviz_pca_ind(${1:pca_model}, labels = FALSE, alpha.ind = 0.5${3:, habillage = ${2:data}${4:\$factor}})

	fviz_pca_biplot(${1:pca_model}, label = "var", alpha.ind = 0.5${3:, habillage = ${2:data}${4:\$factor})

	fviz_pca_var(${1:pca_model}, repel = TRUE)

	ggpubr::ggarrange(
	  fviz_contrib(${1:pca_model}, "var", axes = 1),
	  fviz_contrib(${1:pca_model}, "var", axes = 2),
	  fviz_contrib(${1:pca_model}, "var", axes = 3)
	)

	get_pca_ind(${1:pca_model})
	get_pca_var(${1:pca_model})
	${0}


snippet a-pcoa
	`r if (!"factoextra" %in% .packages()) "library(factoextra)\n\n"`

	# Create distance matrix
	d <-
	  ${1:data} |>
	  dplyr::select(${2}) |>
	  scale() |>
	  dist(method = "${3:euclidean}")

	# Plot distance matrix
	factoextra::fviz_dist(d, show_labels = FALSE)

	# Main PCoA
	pcoa_obj <- cmdscale(d, k = ${4:2}, eig = TRUE)


	# Screeplot: eigenvalues
	ind <- 1:10
	qplot(factor(ind), pcoa_obj\$eig[ind], xlab = "Dimension", ylab = "Eigenvalue")

	# Screeplot: percentages
	rel_eig_1 <- pcoa_obj\$eig[ind]/sum(abs(pcoa_obj$eig))                # Absolute
	rel_eig_2 <- pcoa_obj\$eig[ind]/sum(pcoa_obj$eig[pcoa_obj$eig > 0])   # Positive

	ggplot2::qplot(
	  x = factor(ind), y = rel_eig_1[ind] * 100, color = I("red"),
	  xlab = "Dimension", ylab = "Eigenvalue, % (absolute)"
	)

	ggplot2::qplot(
	  x = factor(ind), y = rel_eig_2[ind] * 100, color = I("blue"),
	  xlab = "Dimension", ylab = "Eigenvalue, % (positive)"
	)

	# Goodnes of fit (GOF)
	pcoa_obj\$GOF

	# Coordinates in MDS space
	pcoa_coord <- as.data.frame(pcoa_obj\$points)
	pcoa_coord %>% head()

	# Plot MDS map (MDS configuration map) with ggplot2
	ggplot(pcoa_coord, aes(V1, V2)) +
	  geom_point(alpha = 0.5)

	# Plot MDS map in colors
	pcoa_coord %>%
	  bind_cols(${1:data}) %>%
	  ggplot(aes(V1, V2, color = ${5:variable})) +
	  geom_point(alpha = 0.5)
	${0}

snippet a-nmds
	# Create distance matrix
	d <-
	  ${1:data} |>
	  dplyr::select(${2}) |>
	  scale() |>
	  dist(method = "${3:euclidean}")

	# Plot distance matrix
	factoextra::fviz_dist(d, show_labels = FALSE)

	# Main NMDS
	mds_obj <- vegan::metaMDS(d, k = ${4:2})

	# Main info about the results
	mds_obj

	# STRESS value
	mds_obj\$stress

	# Shepard diagram
	vegan::stressplot(mds_obj, d)

	# MDS coordinates
	mds_coord <- as.data.frame(mds_obj\$points)
	head(mds_coord)

	# Plot MDS map (MDS configuration map)
	plot(mds_obj)

	# Plot MDS map with ggplot2
	ggplot(mds_coord, aes(MDS1, MDS2)) +
	  geom_point(alpha = 0.5)

	mds_coord %>%
	  bind_cols(${1:data}) %>%
	  ggplot(aes(MDS1, MDS2, color = ${5:variable})) +
	  geom_point(alpha = 0.5)
	${0}
